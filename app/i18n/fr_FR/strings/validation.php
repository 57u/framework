<?php

return array
(
	'validate.required'                 => '%1$s field is required.',
	'validate.min_length'               => '%1$s must be at least %2$s characters long.',
	'validate.max_length'               => '%1$s must be less than %2$s characters long.',
	'validate.exact_length'             => '%1$s must be exacly %2$s characters long.',
	'validate.less_than'                => '%1$s must be less than %2$s.',
	'validate.less_than_or_equal_to'    => '%1$s must be less than or equal to %2$s.',
	'validate.greater_than'             => '%1$s must be greater than %2$s.',
	'validate.greater_than_or_equal_to' => '%1$s must be greater than or equal to %2$s.',
	'validate.between'                  => '%1$s must be between %2$s and %3$s.',
	'validate.match'                    => '%1$s and %2$s must match.',
	'validate.different'                => '%1$s and %2$s must be different.',
	'validate.regex'                    => '%1$s does not match required format.',
	'validate.integer'                  => '%1$s must be an integer.',
	'validate.float'                    => '%1$s must be a float.',
	'validate.natural'                  => '%1$s must be a natural.',
	'validate.natural_non_zero'         => '%1$s must be a non zero natural.',
	'validate.hex'                      => '%1$s must be a valid hexadecimal.',
	'validate.alpha'                    => '%1$s must contain only letters.',
	'validate.alpha_unicode'            => '%1$s must contain only letters.',
	'validate.alphanumeric'             => '%1$s must contain only letters and numbers.',
	'validate.alphanumeric_unicode'     => '%1$s must contain only letters and numbers.',
	'validate.alpha_dash'               => '%1$s must contain only numbers, letters and dashes.',
	'validate.alpha_dash_unicode'       => '%1$s must contain only numbers, letters and dashes.',
	'validate.email'                    => '%1$s must be a valid e-mail address.',
	'validate.email_domain'             => '%1$s must be a valid e-mail address.',
	'validate.url'                      => '%1$s must be a valid URL.',
	'validate.ip'                       => '%1$s must be a valid IP address.',
	'validate.in'                       => '%1$s must be one of available options.',
	'validate.not_in'                   => '%1$s contains an invalid value.',
	'validate.date'                     => '%1$s must be a valid date.',
	'validate.before'                   => '%1$s must be a date before %3$s.',
	'validate.after'                    => '%1$s must be a date after %3$s.',
	'validate.token'                    => 'Invalid security token.',
);